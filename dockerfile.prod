# Multi-stage build for production optimization
FROM node:18-alpine AS builder

# Install pnpm globally
RUN npm install -g pnpm

# Set working directory
WORKDIR /app

# Copy dependency files
COPY package.json pnpm-lock.yaml ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build the application
RUN pnpm build

# Production stage
FROM nginx:alpine AS production

# Install envsubst (gettext package) for environment variable substitution
RUN apk add --no-cache gettext

# Copy built assets to nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# Create nginx config template that uses Railway's PORT environment variable
RUN echo 'server { \
    listen $PORT; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html index.htm; \
    \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    \
    # Enable gzip compression \
    gzip on; \
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; \
}' > /etc/nginx/conf.d/default.conf.template

# Remove the default nginx config
RUN rm /etc/nginx/conf.d/default.conf

# Use Railway's PORT environment variable (defaults to 80 if not set)
ENV PORT=80

# Start nginx with environment variable substitution
CMD envsubst '${PORT}' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'